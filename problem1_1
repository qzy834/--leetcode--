//该方法受计数排序启发，使用一个长度大于nums着元素值的数组a来存储nums数组的值，
//实现了最坏情况下O(n)的复杂度，但实际上不符合题意，因为数组下标不能为负。数组元
//素为负的问题可以通过给下标加一个常数来解决，作者暂时没有做。故该法的输入程序仅
//限数组和target都为正的情况。

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {

        int a[100]={0};
        int size_of_nums = nums.size();
        vector<int>result(2);
        int ii,jj,temp;

        for(ii=0;ii<size_of_nums;++ii){

            temp = target - nums[ii];

            if(temp >= 0){

                if(a[temp] == 1)
                    break;
            }
            
            a[nums[ii]]=1;
        }

        for(jj=0; jj<ii; ++jj){
            if(nums[jj] == target-nums[ii]){
                break; 
            }
        }
        return {jj, ii};
    }
